<?php

/**
 * @file
 * Module enabling the Pinterest hover button.
 */

use Drupal\responsive_image\Entity\ResponsiveImageStyle;

/**
 * Implements hook_page_attachments().
 *
 * Pinterest's JavaScript is included this way rather than using Drupal's
 * library system, because Pinterest's JavaScript reads numerous data-
 * attributes on the script tag(s) with 'pinit.js' in the src, and the library
 * system doesn't provide for adding those. Plus, external scripts don't seem
 * to benefit much from being added via libraries anyway.
 *
 * @param array $page
 */
function pinterest_hover_page_attachments(array &$page) {
  // add selectors that should be excluded from hover button
  $config = \Drupal::config('pinterest_hover.settings');
  $selectors = $config->get('exclude_hover_selectors');
  if (!empty($selectors)) {
    $page['#attached']['drupalSettings']['pinterest_hover']['excluded'] = explode("\n", $selectors);
    $page['#attached']['library'][] = 'pinterest_hover/drupal.pinterest_hover.exclude_hover_selectors';
  }
}

/**
 * Implements hook_js_alter().
 *
 * Pinterest's JavaScript isn't included via the library system because it
 * doesn't seem to provide a mechanism to set arbitrary attributes on the
 * script tag.
 */
function pinterest_hover_js_alter(&$javascript, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  $config = \Drupal::config('pinterest_hover.settings');
  if ($config->get('load_pinterest_js')) {
    $javascript['pinterest_hover/pinterest/pinit.js'] = [
      'scope' => 'footer',
      'attributes' => ['data-pin-hover' => 1, 'async' => TRUE, 'defer' => TRUE],
      'type' => 'external',
      'data' => '//assets.pinterest.com/js/pinit.js',
    ];
  }
}

/**
 * Implements hook_preprocess_responsive_image().
 *
 * The default theming of responsive images excludes an src attribute and uses
 * Picturefill to support older browsers. This prevents pinit.js from knowing
 * what image URL to pin. As of https://github.com/pinterest/widgets/pull/61
 * we can add data-pin-media in lieu of the src attribute to get a working
 * hoverbutton.
 */
function pinterest_hover_preprocess_responsive_image(&$variables) {
  if (empty($variables['img_element']['#uri'])) {
    if (is_array($variables['img_element']['#srcset'])
      && count($variables['img_element']['#srcset']) == 1) {
      // When there is only one choice for srcset, use it. By default, this is
      // the fallback image, which seems fine.
      $variables['img_element']['#attributes']['data-pin-media'] = $variables['img_element']['#srcset'][0]['uri'];
    } else {
      // Locate and use the fallback image the hard way.
      $responsive_image_style = ResponsiveImageStyle::load($variables['responsive_image_style_id']);

      if ($responsive_image_style) {
        $image = \Drupal::service('image.factory')->get($variables['uri']);
        $variables['img_element']['#attributes']['data-pin-media'] = _responsive_image_image_style_url($responsive_image_style->getFallbackImageStyle(), $image->getSource());
      }
    }
  }
}
